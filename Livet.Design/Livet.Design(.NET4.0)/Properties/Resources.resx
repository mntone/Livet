<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmDialogInteractionMessageAction_Description" xml:space="preserve">
    <value>確認ダイアログを表示するアクションです。ConfirmMessage(戻り値あり)に対応します。</value>
  </data>
  <data name="ConfirmMessage_Button_Description" xml:space="preserve">
    <value>表示するメッセージボックスボタンの形式を指定します。</value>
  </data>
  <data name="ConfirmMessage_Caption_Description" xml:space="preserve">
    <value>キャプションです。</value>
  </data>
  <data name="ConfirmMessage_Description" xml:space="preserve">
    <value>確認相互作用メッセージです。</value>
  </data>
  <data name="ConfirmMessage_Image_Description" xml:space="preserve">
    <value>メッセージボックスイメージです。</value>
  </data>
  <data name="ConfirmMessage_Text_Description" xml:space="preserve">
    <value>表示するメッセージです。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToControl_Description" xml:space="preserve">
    <value>名前が表すコントロールのバインドできないプロパティへ、指定されたソースから値を反映するためのビヘイビアです。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToControl_Property_Description" xml:space="preserve">
    <value>アタッチされたコントロールのバインドできないプロパティのうち、このビヘイビアを使用してソースから値を反映したいプロパティを表します。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToControl_Source_Description" xml:space="preserve">
    <value>このビヘイビアを使用して値をコントロールのプロパティに反映するためのソースを表します。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToSource_Description" xml:space="preserve">
    <value>名前が表すコントロールのバインドできないプロパティから、指定されたソースへ値を反映するためのアクションです。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToSource_Property_Description" xml:space="preserve">
    <value>アタッチされたコントロールのバインドできないプロパティのうち、このアクションを使用してソースへ値を反映したいプロパティを表します。</value>
  </data>
  <data name="ControlBindingSupport_OneWayToSource_Source_Description" xml:space="preserve">
    <value>このアクションを使用して値を反映したいソースを表します。</value>
  </data>
  <data name="DataContextDisposeAction_Description" xml:space="preserve">
    <value>アタッチしたオブジェクトのDataContextがIDisposableである場合、Disposeします。</value>
  </data>
  <data name="DirectInteractionMessage_CallbackCommand_Description" xml:space="preserve">
    <value>アクション実行後に実行するコマンドです。このプロパティが設定されていた場合、アクションの実行後アクションの実行に使用した相互作用メッセージをパラメータとして指定されたコマンドを呼び出します。</value>
  </data>
  <data name="DirectInteractionMessage_CallbackMethodName_Description" xml:space="preserve">
    <value>アクション実行後に呼び出すメソッドの名前です。このプロパティとCallbackMethodTargetが設定されていた場合、アクションの実行後アクションの実行に使用した相互作用メッセージをパラメータとして指定されたメソッドを呼び出します。</value>
  </data>
  <data name="DirectInteractionMessage_CallbackMethodTarget_Description" xml:space="preserve">
    <value>アクション実行後に呼び出すメソッドを持つオブジェクトです。このプロパティとCallbackMethodNameが設定されていた場合、アクションの実行後アクションの実行に使用した相互作用メッセージをパラメータとしてメソッドを呼び出します。</value>
  </data>
  <data name="DirectInteractionMessage_Description" xml:space="preserve">
    <value>Viewから直接相互作用メッセージを定義する際に使用します。</value>
  </data>
  <data name="DirectInteractionMessage_Message_Description" xml:space="preserve">
    <value>相互作用メッセージ(各種InteractionMessage)です。</value>
  </data>
  <data name="FileSelectionMessage_AddExtension_Description" xml:space="preserve">
    <value>拡張子を指定しなかった場合、自動で拡張子を追加するかどうかです。</value>
  </data>
  <data name="FileSelectionMessage_Filter_Description" xml:space="preserve">
    <value>ファイルの拡張子Filterです。</value>
  </data>
  <data name="FileSelectionMessage_InitialDirectory_Description" xml:space="preserve">
    <value>ダイアログに表示される初期ディレクトリです。</value>
  </data>
  <data name="FileSelectionMessage_Title_Description" xml:space="preserve">
    <value>ダイアログタイトルです。</value>
  </data>
  <data name="InformationDialogInteractionMessageAction_Description" xml:space="preserve">
    <value>情報ダイアログを表示するアクションです。InformationMessageに対応します。</value>
  </data>
  <data name="InformationMessage_Caption_Description" xml:space="preserve">
    <value>キャプションです。</value>
  </data>
  <data name="InformationMessage_Description" xml:space="preserve">
    <value>情報をViewに通知するためのメッセージです。</value>
  </data>
  <data name="InformationMessage_Image_Description" xml:space="preserve">
    <value>メッセージボックスイメージです。</value>
  </data>
  <data name="InformationMessage_Text_Description" xml:space="preserve">
    <value>表示するメッセージです。</value>
  </data>
  <data name="InteractionMessageAction_InvokeActionOnlyWhenWindowIsActive_Description" xml:space="preserve">
    <value>Windowがアクティブな時のみアクションを実行するかどうかです。</value>
  </data>
  <data name="InteractionMessageTrigger_Description" xml:space="preserve">
    <value>ViewModelからの相互作用メッセージを受信し、アクションを実行します。</value>
  </data>
  <data name="InteractionMessageTrigger_InvokeActionsOnlyWhileAttatchedObjectLoaded_Description" xml:space="preserve">
    <value>このトリガーが発火するのをアタッチされたオブジェクトがロードされている期間(Loaded~Unloaded)だけにするかどうかを表します。</value>
  </data>
  <data name="InteractionMessageTrigger_IsEnable_Description" xml:space="preserve">
    <value>このトリガーが有効かどうかを表します。</value>
  </data>
  <data name="InteractionMessageTrigger_MessageKey_Description" xml:space="preserve">
    <value>このトリガーが反応する相互作用メッセージのメッセージキーをです。このプロパティが指定されていない場合、このトリガーは全ての相互作用メッセージに反応します。</value>
  </data>
  <data name="InteractionMessage_Description" xml:space="preserve">
    <value>相互作用メッセージの基底クラスです。</value>
  </data>
  <data name="InteractionTransitionAction_Description" xml:space="preserve">
    <value>画面遷移(Window)を行うアクションです。TransitionMessageに対応します。</value>
  </data>
  <data name="LivetCallMethodAction_Description" xml:space="preserve">
    <value>ターゲットオブジェクトでメソッドを呼び出しします。BlendSDKのCallMethodActionと異なる点として、引数が１つのメソッドまで呼び出す事が可能です。</value>
  </data>
  <data name="LivetDataTrigger_Description" xml:space="preserve">
    <value>DataTriggerです。BlendSDKのDataTriggerと異なる店として、初期値に対応しています。</value>
  </data>
  <data name="OpenFileDialogInteractionMessageAction_Description" xml:space="preserve">
    <value>「ファイルを開く」ダイアログを表示するアクションです。SelectOpenFileMessage(戻り値有)に対応します。</value>
  </data>
  <data name="OpeningFileSelectionMessage_Description" xml:space="preserve">
    <value>ファイルを開く アクション用の相互作用メッセージです。</value>
  </data>
  <data name="OpeningFileSelectionMessage_MultiSelect_Description" xml:space="preserve">
    <value>複数ファイルを選択可能かどうかです。</value>
  </data>
  <data name="PasswordBoxBindingSupportBehavior_Description" xml:space="preserve">
    <value>PasswordBoxのPasswordをバインド可能にするためのビヘイビア</value>
  </data>
  <data name="PasswordBoxBindingSupportBehavior_Password_Description" xml:space="preserve">
    <value>アタッチされたPasswordBoxのバインド可能なPasswordプロパティ</value>
  </data>
  <data name="ResponsiveInteractionMessage_Description" xml:space="preserve">
    <value>戻り値のある相互作用メッセージの基底クラスです。</value>
  </data>
  <data name="RoutedEventTrigger_Description" xml:space="preserve">
    <value>RoutedEventのためのEventTriggerです。</value>
  </data>
  <data name="SaveFileDialogInteractionMessageAction_Description" xml:space="preserve">
    <value>「ファイルを保存する」ダイアログを表示するアクションです。SelectSaveFileMessage(戻り値有)に対応します。</value>
  </data>
  <data name="SavingFileSelectionMessage_CreatePrompt_Description" xml:space="preserve">
    <value>ユーザーが存在しないファイルを指定した場合に、ファイルを作成することを確認するメッセージを表示するかどうかです。</value>
  </data>
  <data name="SavingFileSelectionMessage_Description" xml:space="preserve">
    <value>ファイルを保存する 用の相互作用メッセージです。</value>
  </data>
  <data name="SavingFileSelectionMessage_OverwritePrompt_Description" xml:space="preserve">
    <value>ユーザーが指定したファイルが存在する場合、上書き確認メッセージを表示するかどうかです。</value>
  </data>
  <data name="SetFocusAction_Description" xml:space="preserve">
    <value>アタッチしているコントロールにフォーカスを試みます。</value>
  </data>
  <data name="TextBoxBindingSupportBehavior_Description" xml:space="preserve">
    <value>TextBoxの選択文字列に関わるプロパティをバインド可能にするためのビヘイビア</value>
  </data>
  <data name="TextBoxBindingSupportBehavior_SelectedLength_Description" xml:space="preserve">
    <value>アタッチされたTextBoxのバインド可能なSelectionLengthプロパティ</value>
  </data>
  <data name="TextBoxBindingSupportBehavior_SelectedStart_Description" xml:space="preserve">
    <value>アタッチされたTextBoxのバインド可能なSelectedStartプロパティ</value>
  </data>
  <data name="TextBoxBindingSupportBehavior_SelectedText_Description" xml:space="preserve">
    <value>アタッチされたTextBoxのバインド可能なSelectedTextプロパティ</value>
  </data>
  <data name="ToolBoxCategory_ControlBindingSupport" xml:space="preserve">
    <value>Livet/バインディングサポート</value>
  </data>
  <data name="ToolBoxCategory_ControlBindingSupport_OneWayToControl" xml:space="preserve">
    <value>Livet/バインディングサポート/コントロールへの単方向ビヘイビア</value>
  </data>
  <data name="ToolBoxCategory_ControlBindingSupport_OneWayToSource" xml:space="preserve">
    <value>Livet/バインディングサポート/ソースへの単方向アクション</value>
  </data>
  <data name="ToolBoxCategory_Messaging" xml:space="preserve">
    <value>Livet/メッセージング</value>
  </data>
  <data name="ToolBoxCategory_Root" xml:space="preserve">
    <value>Livet</value>
  </data>
  <data name="TransitionInteractionMessageAction_IsOwned_Description" xml:space="preserve">
    <value>遷移先WindowがこのWindowに所有されるかどうかを表します。</value>
  </data>
  <data name="TransitionInteractionMessageAction_Mode_Description" xml:space="preserve">
    <value>画面遷移の種類を表します。TransitionMessageでModeがUnKnown以外に指定されていた場合、そちらが優先されます。</value>
  </data>
  <data name="TransitionInteractionMessageAction_WindowType_Description" xml:space="preserve">
    <value>遷移先のWindowの型です。</value>
  </data>
  <data name="TransitionMessage_Description" xml:space="preserve">
    <value>画面遷移アクション用の相互作用メッセージです。</value>
  </data>
  <data name="TransitionMessage_Mode_Description" xml:space="preserve">
    <value>新しいWindowの表示方法を決定します。InteractionTransitionActionで指定されたものより優先されます。</value>
  </data>
  <data name="TransitionMessage_TransitionViewModel_Description" xml:space="preserve">
    <value>遷移先WindowのDataContextに設定するViewModelです。</value>
  </data>
  <data name="WindowActionMessage_Action_Description" xml:space="preserve">
    <value>Windowが遷移すべき状態です。</value>
  </data>
  <data name="WindowActionMessage_Description" xml:space="preserve">
    <value>Windowを最大化・最小化・閉じる・通常化させるための相互作用メッセージです。</value>
  </data>
  <data name="WindowCloseCancelBehavior_CallbackCommand_Description" xml:space="preserve">
    <value>WindowのCloseをキャンセル後に実行するコマンドです。このプロパティが設定されていた場合、WindowのCloseをキャンセル後に指定されたコマンドを実行します。</value>
  </data>
  <data name="WindowCloseCancelBehavior_CallbackMethodName_Description" xml:space="preserve">
    <value>WindowのCloseをキャンセル後に実行するメソッドの名前です。このプロパティとCallBackMethodTargetが設定されていた場合、WindowのCloseをキャンセル後に指定されたメソッドを呼び出します。</value>
  </data>
  <data name="WindowCloseCancelBehavior_CallbackMethodTarget_Description" xml:space="preserve">
    <value>WindowのCloseをキャンセル後に実行するメソッドを持つオブジェクトです。このプロパティとCallBackMethodNameが設定されていた場合、WindowのCloseをキャンセル後に指定されたメソッドを呼び出します。</value>
  </data>
  <data name="WindowCloseCancelBehavior_CanClose_Description" xml:space="preserve">
    <value>アタッチしたWindowをCloseできるかどうかです。</value>
  </data>
  <data name="WindowCloseCancelBehavior_Description" xml:space="preserve">
    <value>WindowのClose処理をキャンセルし、キャンセルした事をCallback通知可能なビヘイビア</value>
  </data>
  <data name="WindowInteractionMessageAction_Description" xml:space="preserve">
    <value>Windowの最小化・最大化・閉じるを行うアクションです。WindowActionMessageに対応します。</value>
  </data>
</root>