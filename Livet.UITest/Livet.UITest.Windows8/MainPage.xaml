<common:LayoutAwarePage
	x:Name="pageRoot"
	x:Class="Livet.UITest.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Livet.UITest"
	xmlns:common="using:Livet.UITest.Common"
	xmlns:i="using:Windows.UI.Interactivity"
	xmlns:l="using:Livet.Behaviors"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d">

	<common:LayoutAwarePage.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary
					Source="Common/StandardStyles.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</common:LayoutAwarePage.Resources>

	<Grid
		Style="{StaticResource LayoutRootStyle}">
		<Grid.RowDefinitions>
			<RowDefinition
				Height="140" />
			<RowDefinition
				Height="*" />
		</Grid.RowDefinitions>

		<StackPanel
			Grid.Row="1"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Background="{StaticResource ApplicationPageBackgroundThemeBrush}">

			<Button
				Content="LiveCallMethodAction (MethodParameterなし) のテスト">
				<i:Interaction.Triggers>
					<i:EventTrigger
						EventName="Click">
						<l:LivetCallMethodAction
							MethodTarget="{Binding}"
							MethodName="PopupAsync" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>

			<Button
				Content="LiveCallMethodAction (MethodParameterあり) のテスト">
				<i:Interaction.Triggers>
					<i:EventTrigger
						EventName="Click">
						<l:LivetCallMethodAction
							MethodTarget="{Binding}"
							MethodName="PopupAsync"
							MethodParameter="これはMethodParameterありのLiveCallMethodActionからの呼び出しです" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>

			<TextBlock
				Text="{Binding Text}" />

			<TextBox
				Text="{Binding Text, Mode=TwoWay}" />

			<CheckBox
				IsChecked="{Binding IsCommandEnabled, Mode=TwoWay}"
				Content="ViewModelCommandが有効" />

			<Button
				Content="ViewModelCommandのテスト"
				Command="{Binding ViewModelCommand}" />

			<Button
				Click="Button_Click_1"
				Content="次のページに行く" />

		</StackPanel>

		<!-- [戻る] ボタンおよびページ タイトル-->
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<Button
				x:Name="backButton"
				Click="GoBack"
				IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}"
				Style="{StaticResource BackButtonStyle}" />
			<TextBlock
				x:Name="pageTitle"
				Text="Livet.UITest (Windows 8)"
				Grid.Column="1"
				IsHitTestVisible="false"
				Style="{StaticResource PageHeaderTextStyle}" />
		</Grid>

		<VisualStateManager.VisualStateGroups>
			<!--表示状態には、アプリケーションのビューステートが反映されます -->
			<VisualStateGroup
				x:Name="ApplicationViewStates">
				<VisualState
					x:Name="FullScreenLandscape" />
				<VisualState
					x:Name="Filled" />

				<!-- ページ全体では、縦方向に対して、より狭い 100 ピクセルの余白の規則を優先します -->
				<VisualState
					x:Name="FullScreenPortrait">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames
							Storyboard.TargetName="backButton"
							Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame
								KeyTime="0"
								Value="{StaticResource PortraitBackButtonStyle}" />
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>

				<!--
                    スナップの場合、[戻る] ボタンとタイトルには異なるスタイルが使用され、他のすべてのビューステートで表示されるグリッドに対して
                    一覧の表現が置き換えられます
                -->
				<VisualState
					x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames
							Storyboard.TargetName="backButton"
							Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame
								KeyTime="0"
								Value="{StaticResource SnappedBackButtonStyle}" />
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames
							Storyboard.TargetName="pageTitle"
							Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame
								KeyTime="0"
								Value="{StaticResource SnappedPageHeaderTextStyle}" />
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</common:LayoutAwarePage>